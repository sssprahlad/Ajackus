{"ast":null,"code":"export const API_BASE_URL = \"http://localhost:8080\";\nexport const LOGIN_API = `${API_BASE_URL}/login`;\nexport const REGISTER_API = `${API_BASE_URL}/register`;\nexport const ADD_USER_API = `${API_BASE_URL}/manageUser`;\nexport const GET_ALL_USERS_API = `${API_BASE_URL}/manageUser`;\nexport const GET_USER_API = `${API_BASE_URL}/manageUser`;\nexport const UPDATE_USER_API = `${API_BASE_URL}/manageUser`;\nexport const DELETE_USER_API = `${API_BASE_URL}/manageUser`;\nexport const SEARCH_API = `${API_BASE_URL}/searchQuery`;\nimport axios from 'axios';\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add a request interceptor to include the token in every request\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["API_BASE_URL","LOGIN_API","REGISTER_API","ADD_USER_API","GET_ALL_USERS_API","GET_USER_API","UPDATE_USER_API","DELETE_USER_API","SEARCH_API","axios","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href"],"sources":["D:/Mern_Projects/Ajackus/frontend/src/utils/Constants.js"],"sourcesContent":["\r\nexport const API_BASE_URL = \"http://localhost:8080\";\r\n\r\nexport const LOGIN_API = `${API_BASE_URL}/login`;\r\nexport const REGISTER_API = `${API_BASE_URL}/register`;\r\nexport const ADD_USER_API = `${API_BASE_URL}/manageUser`;\r\nexport const GET_ALL_USERS_API = `${API_BASE_URL}/manageUser`;\r\nexport const GET_USER_API = `${API_BASE_URL}/manageUser`;\r\nexport const UPDATE_USER_API = `${API_BASE_URL}/manageUser`;\r\nexport const DELETE_USER_API = `${API_BASE_URL}/manageUser`;\r\nexport const SEARCH_API = `${API_BASE_URL}/searchQuery`;\r\n\r\nimport axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\n// Add a request interceptor to include the token in every request\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add a response interceptor to handle errors\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            // Handle unauthorized access\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n"],"mappings":"AACA,OAAO,MAAMA,YAAY,GAAG,uBAAuB;AAEnD,OAAO,MAAMC,SAAS,GAAG,GAAGD,YAAY,QAAQ;AAChD,OAAO,MAAME,YAAY,GAAG,GAAGF,YAAY,WAAW;AACtD,OAAO,MAAMG,YAAY,GAAG,GAAGH,YAAY,aAAa;AACxD,OAAO,MAAMI,iBAAiB,GAAG,GAAGJ,YAAY,aAAa;AAC7D,OAAO,MAAMK,YAAY,GAAG,GAAGL,YAAY,aAAa;AACxD,OAAO,MAAMM,eAAe,GAAG,GAAGN,YAAY,aAAa;AAC3D,OAAO,MAAMO,eAAe,GAAG,GAAGP,YAAY,aAAa;AAC3D,OAAO,MAAMQ,UAAU,GAAG,GAAGR,YAAY,cAAc;AAEvD,OAAOS,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAEZ,YAAY;EACrBa,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACd,CAAC;EACDC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CACxBS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACP,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAChC;IACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}